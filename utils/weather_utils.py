# utils/weather_utils.py
# -*- coding: utf-8 -*-
"""
Utility for fetching weather data using the OpenWeatherMap API.
This is the final, most robust, and complete version.
"""
from __future__ import annotations
from typing import Optional
import os
import requests

# Map weather condition codes from OpenWeatherMap to emojis
WEATHER_EMOJIS = {
    "Thunderstorm": "‚õàÔ∏è", "Drizzle": "üíß", "Rain": "üåßÔ∏è",
    "Snow": "‚ùÑÔ∏è", "Mist": "üå´Ô∏è", "Smoke": "üí®", "Haze": "üå´Ô∏è",
    "Dust": "üí®", "Fog": "üå´Ô∏è", "Sand": "üí®", "Ash": "üí®",
    "Squall": "üå¨Ô∏è", "Tornado": "üå™Ô∏è", "Clear": "‚òÄÔ∏è", "Clouds": "‚òÅÔ∏è",
}

def get_weather_forecast(lat: float, lon: float) -> str:
    """
    Fetches a detailed weather forecast from the OpenWeatherMap API.
    """
    api_key = os.getenv("OPENWEATHER_API_KEY")
    if not api_key:
        print("[Weather_Utils] ERROR: OPENWEATHER_API_KEY is not set.")
        return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ API Key"
    
    if lat is None or lon is None:
        return "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö"

    url = (
        f"https://api.openweathermap.org/data/2.5/weather"
        f"?lat={lat}&lon={lon}&appid={api_key}&units=metric&lang=th"
    )
    
    print(f"[Weather_Utils] Fetching weather from OpenWeatherMap API for Lat: {lat}, Lon: {lon}")
    
    try:
        resp = requests.get(url, timeout=10)
        
        if resp.status_code == 401:
            return "‚ùå API Key ‡∏Ç‡∏≠‡∏á OpenWeatherMap ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Ñ‡∏£‡∏±‡∏ö"
        
        resp.raise_for_status()
        
        data = resp.json()
        
        weather = data.get("weather", [{}])[0]
        main_condition = weather.get("main", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö")
        description = weather.get("description", "-").capitalize()
        emoji = WEATHER_EMOJIS.get(main_condition, "üå°Ô∏è")

        main = data.get("main", {})
        temp = main.get("temp", "-")
        feels_like = main.get("feels_like", "-")
        humidity = main.get("humidity", "-")
        
        wind = data.get("wind", {})
        wind_speed_kmh = round(wind.get("speed", 0) * 3.6, 1)

        city_name = data.get("name", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á")

        message = (
            f"{emoji} **‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î - {city_name}**\n"
            f"------------------------------------\n"
            f"**‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®:** {description}\n"
            f"**‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥:** {temp}¬∞C (‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô {feels_like}¬∞C)\n"
            f"**‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô:** {humidity}%\n"
            f"**‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡∏°:** {wind_speed_kmh} ‡∏Å‡∏°./‡∏ä‡∏°.\n"
            f"------------------------------------\n"
            f"*‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å OpenWeatherMap*"
        )
        return message
        
    except requests.exceptions.RequestException as e:
        print(f"[Weather_Utils] Network error fetching weather data: {e}")
        return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÑ‡∏î‡πâ"
    except Exception as e:
        print(f"[Weather_Utils] An error occurred while processing weather data: {e}")
        return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®"
