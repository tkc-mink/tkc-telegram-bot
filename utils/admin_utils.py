# utils/admin_utils.py
# -*- coding: utf-8 -*-
"""
Admin utilities for managing user access and bot functions.
This module now uses the updated memory_store functions.
"""
import os
from typing import Dict, Any, Optional

# --- ‚úÖ **‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:** ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà Import ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ---
from utils.memory_store import (
    load_all_user_profiles, # ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å get_all_users
    update_user_profile,    # ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å update_user_status
    get_user_by_id
)
from utils.telegram_api import send_message, reply_keyboard

SUPER_ADMIN_ID = os.getenv("SUPER_ADMIN_ID")

def is_super_admin(user_id: int) -> bool:
    """Checks if the given user ID is the SUPER_ADMIN_ID."""
    return str(user_id) == str(SUPER_ADMIN_ID)

def approve_user(admin_chat_id: int, target_user_id: int) -> str:
    """Approves a user to use the bot."""
    user_profile = get_user_by_id(target_user_id)
    if not user_profile:
        return f"‡∏ä‡∏¥‡∏ö‡∏∞‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID {target_user_id} ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö"
    
    if user_profile.get("is_approved", False):
        return f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {user_profile.get('first_name', '')} (ID: {target_user_id}) ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö"

    user_profile['is_approved'] = True
    # ‚úÖ ‡πÉ‡∏ä‡πâ update_user_profile ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    update_user_profile(user_profile)
    
    send_message(target_user_id, "üéâ ‡πÄ‡∏¢‡πâ! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏á‡∏ä‡∏¥‡∏ö‡∏∞‡∏ô‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö")
    return f"‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {user_profile.get('first_name', '')} (ID: {target_user_id}) ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"

def list_all_users() -> str:
    """Lists all registered users with their status."""
    # ‚úÖ ‡πÉ‡∏ä‡πâ load_all_user_profiles ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    all_users = load_all_user_profiles()
    if not all_users:
        return "‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö‡∏ä‡∏¥‡∏ö‡∏∞‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"

    messages = ["üë§ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:"]
    for user_id_str, profile in all_users.items():
        user_id = int(user_id_str)
        status = "‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß" if profile.get("is_approved") else "‚è≥ ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
        name = profile.get("first_name", f"‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ ({user_id})")
        messages.append(f"- {name} (ID: {user_id}) : {status}")
    return "\n".join(messages)

def remove_user(admin_chat_id: int, target_user_id: int) -> str:
    """Removes a user's approval to use the bot."""
    user_profile = get_user_by_id(target_user_id)
    if not user_profile:
        return f"‡∏ä‡∏¥‡∏ö‡∏∞‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ID {target_user_id} ‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö"
    
    if not user_profile.get("is_approved", False):
        return f"‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {user_profile.get('first_name', '')} (ID: {target_user_id}) ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö"

    user_profile['is_approved'] = False
    # ‚úÖ ‡πÉ‡∏ä‡πâ update_user_profile ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    update_user_profile(user_profile)

    send_message(target_user_id, "üò¢ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏á‡∏ä‡∏¥‡∏ö‡∏∞‡∏ô‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö")
    return f"üö´ ‡∏ñ‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ {user_profile.get('first_name', '')} (ID: {target_user_id}) ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö"

def get_admin_commands_keyboard():
    """Returns an inline keyboard for admin commands."""
    return reply_keyboard([
        ["‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"],
        ["‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"],
        ["‡∏î‡∏π‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"]
    ], one_time=False, resize=True)
