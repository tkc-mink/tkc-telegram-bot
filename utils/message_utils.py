# utils/message_utils.py

import os
import requests
from typing import Optional

def get_telegram_token() -> str:
    """
    ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ Telegram Bot Token ‡∏à‡∏≤‡∏Å environment variable (‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏∑‡πà‡∏≠ TELEGRAM_TOKEN)
    """
    token = os.getenv("TELEGRAM_TOKEN")
    if not token:
        raise EnvironmentError("‡πÑ‡∏°‡πà‡∏û‡∏ö TELEGRAM_TOKEN ‡πÉ‡∏ô environment variable")
    return token

def send_message(chat_id: int, text: str, parse_mode: Optional[str] = None) -> None:
    """
    ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà Telegram Chat
    - chat_id: ‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ä‡∏ó (int ‡∏´‡∏£‡∏∑‡∏≠ str)
    - text: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (string)
    - parse_mode: "HTML", "Markdown" ‡∏´‡∏£‡∏∑‡∏≠ None
    """
    try:
        payload = {
            "chat_id": chat_id,
            "text": text[:4096],  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà Telegram ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö
        }
        if parse_mode:
            payload["parse_mode"] = parse_mode
        resp = requests.post(
            f"https://api.telegram.org/bot{get_telegram_token()}/sendMessage",
            json=payload,
            timeout=10
        )
        if not resp.ok:
            print(f"[send_message] Error: {resp.status_code} - {resp.text}")
    except Exception as e:
        print(f"[send_message] {e}")

def send_photo(chat_id: int, photo_url: str, caption: Optional[str] = None) -> None:
    """
    ‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏ó‡∏µ‡πà Telegram Chat
    - chat_id: ‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ä‡∏ó (int ‡∏´‡∏£‡∏∑‡∏≠ str)
    - photo_url: URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ
    - caption: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ï‡πâ‡∏£‡∏π‡∏õ (string ‡∏´‡∏£‡∏∑‡∏≠ None)
    """
    try:
        payload = {"chat_id": chat_id, "photo": photo_url}
        if caption:
            payload["caption"] = caption[:1024]  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î caption ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Telegram ‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        resp = requests.post(
            f"https://api.telegram.org/bot{get_telegram_token()}/sendPhoto",
            json=payload,
            timeout=10
        )
        if not resp.ok:
            print(f"[send_photo] Error: {resp.status_code} - {resp.text}")
    except Exception as e:
        print(f"[send_photo] {e}")

def ask_for_location(chat_id: int, text: str = "üìç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì") -> None:
    """
    ‡∏™‡πà‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≠ Location ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡πÅ‡∏ä‡∏£‡πå location ‡∏ú‡πà‡∏≤‡∏ô Telegram
    """
    keyboard = {
        "keyboard": [
            [{"text": "üìç ‡πÅ‡∏ä‡∏£‡πå‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì", "request_location": True}]
        ],
        "resize_keyboard": True,
        "one_time_keyboard": True
    }
    payload = {
        "chat_id": chat_id,
        "text": text,
        "reply_markup": keyboard
    }
    try:
        resp = requests.post(
            f"https://api.telegram.org/bot{get_telegram_token()}/sendMessage",
            json=payload,
            timeout=10
        )
        if not resp.ok:
            print(f"[ask_for_location] Error: {resp.status_code} - {resp.text}")
    except Exception as e:
        print(f"[ask_for_location] {e}")
