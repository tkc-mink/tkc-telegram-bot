import os
import requests
from bs4 import BeautifulSoup

def get_gold_price() -> str:
    """
    ‡∏Ñ‡∏∑‡∏ô‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥ ‡∏ñ‡πâ‡∏≤ scrape ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏∞ fallback GoldAPI.io)
    """
    # ---------- 1) Scrape ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏à‡∏≤‡∏Å‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≠‡∏á ----------
    try:
        url = "https://www.goldtraders.or.th/"
        headers = {"User-Agent": "Mozilla/5.0"}
        resp = requests.get(url, headers=headers, timeout=10)
        soup = BeautifulSoup(resp.text, "html.parser")
        table = soup.find("table", class_="table-price")
        prices = []
        if table:
            for row in table.find_all("tr"):
                cols = [c.get_text(strip=True) for c in row.find_all("td")]
                if len(cols) >= 3:
                    if "‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á" in cols[0]:
                        prices.append(f"‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á: ‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠ {cols[1]} / ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å {cols[2]}")
                    elif "‡∏ó‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏û‡∏£‡∏£‡∏ì" in cols[0]:
                        prices.append(f"‡∏ó‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏û‡∏£‡∏£‡∏ì: ‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠ {cols[1]} / ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å {cols[2]}")
            if prices:
                return (
                    "üìÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡∏™‡∏°‡∏≤‡∏Ñ‡∏°‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥):\n"
                    + "\n".join(prices)
                    + "\n\n‡∏î‡∏π‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: https://www.goldtraders.or.th/"
                )
        else:
            print("[gold_utils] ‡πÑ‡∏°‡πà‡∏û‡∏ö table-price goldtraders")
    except Exception as e:
        print(f"[gold_utils] error goldtraders: {e}")

    # ---------- 2) Fallback ‡πÑ‡∏õ GoldAPI.io (spot) ----------
    GOLD_API_KEY = os.getenv("GOLDAPI_KEY")
    if GOLD_API_KEY:
        url = "https://www.goldapi.io/api/XAU/THB"
        headers = {
            "x-access-token": GOLD_API_KEY,
            "Content-Type": "application/json"
        }
        try:
            resp = requests.get(url, headers=headers, timeout=10)
            if resp.status_code == 200:
                data = resp.json()
                price = data.get("price")
                if price:
                    # 1 ‡∏≠‡∏≠‡∏ô‡∏ã‡πå ‚âà 31.1035 ‡∏Å‡∏£‡∏±‡∏°, 1 ‡∏ö‡∏≤‡∏ó‡∏ó‡∏≠‡∏á ‚âà 15.244 ‡∏Å‡∏£‡∏±‡∏°
                    price_per_gram = price / 31.1035
                    price_per_baht = price_per_gram * 15.244
                    price_per_baht = int(price_per_baht // 10 * 10)
                    return (
                        f"üìÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó (GoldAPI.io):\n"
                        f"‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å {price_per_baht:,} ‡∏ö‡∏≤‡∏ó/‡∏ö‡∏≤‡∏ó‡∏ó‡∏≠‡∏á\n"
                        f"(‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ô‡∏µ‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≤‡∏Å spot XAU/THB, ‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏Å‡∏≥‡πÄ‡∏´‡∏ô‡πá‡∏à‡∏´‡∏£‡∏∑‡∏≠ premium ‡∏ï‡∏•‡∏≤‡∏î‡πÑ‡∏ó‡∏¢)\n"
                        f"‡∏î‡∏π‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏•‡∏≤‡∏î‡πÑ‡∏ó‡∏¢: https://www.goldtraders.or.th/"
                    )
        except Exception as e:
            print(f"[gold_utils] GoldAPI error: {e}")

    # ---------- 3) Fallback mock ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ api key ‡∏´‡∏£‡∏∑‡∏≠ error ----------
    return (
        "üìÖ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á):\n"
        "‡∏ó‡∏≠‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ó‡πà‡∏á: ‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠ 38,000 / ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å 38,100 ‡∏ö‡∏≤‡∏ó\n"
        "‡∏ó‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏û‡∏£‡∏£‡∏ì: ‡∏£‡∏±‡∏ö‡∏ã‡∏∑‡πâ‡∏≠ 37,500 / ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å 38,600 ‡∏ö‡∏≤‡∏ó"
    )
