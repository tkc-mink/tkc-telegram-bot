# utils/lottery_utils.py
# -*- coding: utf-8 -*-
"""
Utility for fetching the latest lottery results using a reliable search tool.
This replaces the previous, fragile web scraping method.
"""
from __future__ import annotations
from typing import Optional

# ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Å‡∏ß‡πà‡∏≤
try:
    from internal_tools import Google Search
except ImportError:
    print("WARNING: 'internal_tools.Google Search' not found. Using mock data for lottery.")
    class MockLotteryResult:
        def __init__(self, snippet): self.snippet = snippet
    class MockSearchResults:
        def __init__(self, results): self.results = results
    def search_mock(queries=None):
        return [MockSearchResults([MockLotteryResult(
            "‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏• ‡∏á‡∏ß‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° 2568 ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1: 123456, ‡πÄ‡∏•‡∏Ç‡∏ó‡πâ‡∏≤‡∏¢ 2 ‡∏ï‡∏±‡∏ß: 78"
        )])]
    Google Search = type("GoogleSearch", (), {"search": staticmethod(search_mock)})


def get_lottery_result() -> str:
    """
    Fetches the latest official lottery results using a reliable Google search.
    """
    print("[Lottery_Utils] Fetching latest lottery results...")
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏≤‡∏á
    query = "‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"

    try:
        search_results = Google Search(queries=[query])

        if search_results and search_results[0].results and search_results[0].results[0].snippet:
            # ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å Google Search ‡∏°‡∏±‡∏Å‡∏à‡∏∞‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
            lottery_data = search_results[0].results[0].snippet

            # ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢
            message = (
                f"üéâ **‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡∏Å‡∏¥‡∏ô‡πÅ‡∏ö‡πà‡∏á‡∏£‡∏±‡∏ê‡∏ö‡∏≤‡∏• (‡∏á‡∏ß‡∏î‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î)**\n"
                f"------------------------------------\n"
                f"{lottery_data}\n"
                f"------------------------------------\n"
                f"*‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö!*"
            )
            return message
        else:
            print("[Lottery_Utils] No lottery results found.")
            return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ"

    except Exception as e:
        print(f"[Lottery_Utils] An error occurred while fetching lottery results: {e}")
        return "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏™‡∏•‡∏≤‡∏Å"
