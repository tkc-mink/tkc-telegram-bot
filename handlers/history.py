# handlers/history.py
# -*- coding: utf-8 -*-
from __future__ import annotations
from typing import Dict, Any, List, Optional
import os
from datetime import datetime

from utils.memory_store import get_user_chat_history
from utils.message_utils import send_message, send_typing_action

# ===== Config via ENV =====
_HISTORY_DEFAULT_LIMIT = int(os.getenv("HISTORY_DEFAULT_LIMIT", "10"))
_HISTORY_MAX_LIMIT     = int(os.getenv("HISTORY_MAX_LIMIT", "100"))
_HISTORY_SNIPPET_CHARS = int(os.getenv("HISTORY_SNIPPET_CHARS", "300"))  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î

# ===== Helpers =====
def _html_escape(s: str) -> str:
    s = s or ""
    return s.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")

def _parse_limit(user_text: str) -> int:
    """
    ‡∏î‡∏∂‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô '/my_history 20' ‚Üí 20
    ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏ ‚Üí ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô, ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô _HISTORY_MAX_LIMIT
    """
    try:
        parts = (user_text or "").strip().split()
        if len(parts) >= 2 and parts[1].isdigit():
            n = int(parts[1])
            if n < 1:
                return _HISTORY_DEFAULT_LIMIT
            return min(n, _HISTORY_MAX_LIMIT)
    except Exception:
        pass
    return _HISTORY_DEFAULT_LIMIT

def _fmt_ts(ts_str: Optional[str]) -> str:
    """
    ‡∏£‡∏±‡∏ö ISO string ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∑‡∏ô 'YYYY-MM-DD HH:MM'
    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ 'Z' ‡∏´‡∏£‡∏∑‡∏≠‡∏°‡∏µ timezone offset
    ‡∏ñ‡πâ‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô '-'
    """
    if not ts_str:
        return "-"
    try:
        s = ts_str.strip()
        # ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢ Z
        if s.endswith("Z"):
            s = s[:-1] + "+00:00"
        dt = datetime.fromisoformat(s)
        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ timezone ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô local ‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢ format
        if dt.tzinfo is not None:
            dt = dt.astimezone()
        return dt.strftime("%Y-%m-%d %H:%M")
    except Exception:
        try:
            # fallback: ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πâ‡∏ô ‡πÜ ‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏î‡∏µ
            return ts_str[:16]
        except Exception:
            return "-"

def _shorten(content: str, limit: int = _HISTORY_SNIPPET_CHARS) -> str:
    if not content:
        return ""
    if len(content) <= limit:
        return content
    return content[:limit - 1] + "‚Ä¶"

def _role_label(role: str) -> str:
    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ user/assistant ‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    if role == "user":
        return "‡∏Ñ‡∏∏‡∏ì"
    if role == "assistant":
        return "‡∏ú‡∏°"
    # ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ (‡πÄ‡∏ä‡πà‡∏ô system/tool) ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏î‡∏¥‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏ß‡∏á‡πÄ‡∏•‡πá‡∏ö
    return f"{_html_escape(role)}"

def _format_history_lines(items: List[Dict[str, Any]]) -> str:
    """
    ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° HTML:
    ‚Ä¢ <code>YYYY-MM-DD HH:MM</code> <b>‡∏Ñ‡∏∏‡∏ì/‡∏ú‡∏°</b>: ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‚Ä¶
    (escape ‡∏ó‡∏∏‡∏Å‡∏à‡∏∏‡∏î‡∏Å‡∏±‡∏ô‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏û‡∏±‡∏á)
    """
    lines: List[str] = []
    for it in items:
        ts = _fmt_ts(it.get("timestamp"))
        role = _role_label(str(it.get("role", "")))
        content = _shorten(str(it.get("content", "") or ""))
        # escape content; role ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ escape ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ user/assistant (‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ó‡∏¢‡∏•‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢)
        lines.append(f"‚Ä¢ <code>{_html_escape(ts)}</code> <b>{role}</b>: {_html_escape(content)}")
    return "\n".join(lines)

# ===== Main Handler =====
def handle_history(user_info: Dict[str, Any], user_text: str) -> None:
    """
    ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ N ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 10; ‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô '/my_history 20')
    - ‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÄ‡∏Å‡πà‡∏≤‡∏™‡∏∏‡∏î ‚Üí ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏∏‡∏î ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏´‡∏•‡∏•‡∏∑‡πà‡∏ô)
    - ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ï‡πà‡∏≠ HTML ‡πÅ‡∏•‡∏∞‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡πà‡∏≤‡∏ô utils.message_utils
    """
    chat_id = user_info["profile"]["user_id"]

    try:
        send_typing_action(chat_id, "typing")

        # 1) ‡∏≠‡πà‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        full_history = get_user_chat_history(chat_id) or []
        if not full_history:
            send_message(chat_id, "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏Ñ‡∏£‡∏±‡∏ö", parse_mode="HTML")
            return

        # 2) ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
        limit = _parse_limit(user_text)
        # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏™‡∏∏‡∏î 'limit' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡πà‡∏≤ ‚Üí ‡πÉ‡∏´‡∏°‡πà
        tail = full_history[-limit:]
        # ‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏ß‡πâ‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß; ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏Ñ‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏° tail ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Å‡πà‡∏≤‚Üí‡πÉ‡∏´‡∏°‡πà
        # ‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Å‡πá‡∏ö‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏ß‡πâ '‡∏´‡∏±‡∏ß' ‡πÉ‡∏´‡πâ‡∏™‡∏•‡∏±‡∏ö: tail = list(reversed(full_history))[:limit][::-1]

        # 3) ‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        header = f"üóÇÔ∏è <b>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ {len(tail)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</b>\n"
        body = _format_history_lines(tail)
        footer = (
            "\n\n‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: ‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô "
            "<code>/my_history 20</code> (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î "
            f"{_HISTORY_MAX_LIMIT})"
        )
        msg = header + body + footer

        # 4) ‡∏™‡πà‡∏á (wrapper ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á 4096 ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
        send_message(chat_id, msg, parse_mode="HTML")

    except Exception as e:
        print(f"[handle_history] ERROR: {e}")
        send_message(chat_id, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤", parse_mode="HTML")
