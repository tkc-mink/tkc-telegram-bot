# handlers/history.py
# -*- coding: utf-8 -*-

from utils.message_utils import send_message
from utils.history_utils import get_user_history


def handle_history(chat_id: int, user_text: str) -> None:
    """
    ‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°/‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    """
    try:
        user_id = str(chat_id)
        logs = get_user_history(user_id, limit=10) or []

        if not logs:
            send_message(chat_id, "üóíÔ∏è ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö")
            return

        lines = []
        for item in logs:
            q = item.get("q", "")
            a = item.get("a", "")
            dt = item.get("date", "")
            lines.append(f"‚Ä¢ [{dt}] {q}\n  ‚îî {a}")

        text = "üìú <b>‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 10 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</b>\n" + "\n".join(lines)
        send_message(chat_id, text, parse_mode="HTML")
    except Exception as e:
        send_message(chat_id, f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ: {e}")
