# handlers/review.py
# -*- coding: utf-8 -*-
from __future__ import annotations
from typing import Dict, Any, Optional
import re

from utils.message_utils import send_message, send_typing_action
from utils.review_utils import set_review, need_review_today

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏° (‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏û‡∏±‡∏á)
try:
    from utils.context_utils import update_context, is_waiting_review  # type: ignore
except Exception:  # pragma: no cover
    def update_context(*_a, **_kw):  # type: ignore
        return None
    def is_waiting_review(*_a, **_kw) -> bool:  # type: ignore
        return False

# ===== Helpers =====
def _html_escape(s: str) -> str:
    s = s or ""
    return s.replace("&", "&amp;").replace("<", "&lt;").replace(">", "&gt;")

_RATING_RE = re.compile(r"\b([1-5])\b")

def _extract_rating(text: str) -> Optional[int]:
    """
    ‡∏î‡∏∂‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô 1..5 ‡∏ï‡∏±‡∏ß‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô:
    '/review 5', '/review ‡πÉ‡∏´‡πâ 4 ‡∏î‡∏≤‡∏ß', '‡∏£‡∏µ‡∏ß‡∏¥‡∏ß 3'
    """
    if not text:
        return None
    m = _RATING_RE.search(text)
    if not m:
        return None
    try:
        v = int(m.group(1))
        return v if 1 <= v <= 5 else None
    except Exception:
        return None

def _face_for(score: int) -> str:
    return {5: "ü§©", 4: "üòä", 3: "üòê", 2: "üôÅ", 1: "üòû"}.get(score, "‚≠ê")

# ===== Main (‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏£‡∏±‡∏ö user_info, user_text) =====
def handle_review(user_info: Dict[str, Any], user_text: str) -> None:
    """
    ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ö‡∏≠‡∏ó‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢ ‡πÜ
    - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: /review 1-5 ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç 1..5 ‡∏õ‡∏ô‡∏≠‡∏¢‡∏π‡πà
    - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‚Üí ‡∏Ç‡∏≠‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    - ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß ‚Üí ‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡∏™‡∏±‡πâ‡∏ô ‡πÜ
    """
    chat_id = user_info["profile"]["user_id"]
    user_id = str(user_info["profile"]["user_id"])
    user_name = user_info["profile"].get("first_name") or ""

    try:
        send_typing_action(chat_id, "typing")

        rating = _extract_rating(user_text or "")
        if rating is not None:
            # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            try:
                set_review(user_id, rating)
            except Exception as e:
                print(f"[handle_review] set_review error: {e}")
                send_message(chat_id, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô", parse_mode="HTML")
                return

            # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï context (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            try:
                update_context(user_id, {"waiting_review": False, "last_rating": rating})  # type: ignore
            except Exception:
                pass

            face = _face_for(rating)
            send_message(
                chat_id,
                f"‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {_html_escape(user_name)}! {face}\n"
                f"‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: <b>{rating}/5</b>",
                parse_mode="HTML",
            )
            return

        # ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‚Üí ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏´‡∏°
        need_today = False
        try:
            need_today = bool(need_review_today(user_id))
        except Exception as e:
            print(f"[handle_review] need_review_today error: {e}")
            # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏ö‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ
            need_today = False

        if need_today or is_waiting_review(user_id):  # type: ignore
            send_message(
                chat_id,
                "‚ùì ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à (1‚Äì5): ‡πÄ‡∏ä‡πà‡∏ô <code>/review 5</code>",
                parse_mode="HTML",
            )
        else:
            send_message(
                chat_id,
                "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö (‡πÅ‡∏ï‡πà‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏û‡∏¥‡∏°‡∏û‡πå <code>/review 1-5</code> ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢)",
                parse_mode="HTML",
            )

    except Exception as e:
        print(f"[handle_review] ERROR: {e}")
        send_message(chat_id, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß", parse_mode="HTML")

# ===== Legacy (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢ chat_id ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á) =====
def handle_review_legacy(chat_id: int | str, user_text: str) -> None:
    """
    ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°: ‡∏£‡∏±‡∏ö (chat_id, user_text)
    """
    try:
        send_typing_action(chat_id, "typing")
        user_id = str(chat_id)

        rating = _extract_rating(user_text or "")
        if rating is not None:
            try:
                set_review(user_id, rating)
            except Exception as e:
                print(f"[handle_review_legacy] set_review error: {e}")
                send_message(chat_id, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô", parse_mode="HTML")
                return
            face = _face_for(rating)
            send_message(chat_id, f"‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö! {face}\n‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: <b>{rating}/5</b>", parse_mode="HTML")
            return

        try:
            need_today = bool(need_review_today(user_id))
        except Exception:
            need_today = False

        if need_today:
            send_message(chat_id, "‚ùì ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à (1‚Äì5): ‡πÄ‡∏ä‡πà‡∏ô <code>/review 5</code>", parse_mode="HTML")
        else:
            send_message(chat_id, "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö (‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢ <code>/review 1-5</code>)", parse_mode="HTML")
    except Exception as e:
        print(f"[handle_review_legacy] ERROR: {e}")
        send_message(chat_id, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß", parse_mode="HTML")
